[{"/Users/sutanshuseth/Desktop/KnowYourCourses/kyc/src/index.js":"1","/Users/sutanshuseth/Desktop/KnowYourCourses/kyc/src/App.js":"2","/Users/sutanshuseth/Desktop/KnowYourCourses/kyc/src/reportWebVitals.js":"3"},{"size":500,"mtime":1610824763853,"results":"4","hashOfConfig":"5"},{"size":16987,"mtime":1610905348474,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1610824763854,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"7htals",{"filePath":"11","messages":"12","errorCount":0,"warningCount":27,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"/Users/sutanshuseth/Desktop/KnowYourCourses/kyc/src/index.js",[],["16","17"],"/Users/sutanshuseth/Desktop/KnowYourCourses/kyc/src/App.js",["18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44"],"import logo from './logo.svg';\nimport './App.css';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Button from 'react-bootstrap/Button'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Input } from 'semantic-ui-react'\nimport Async from 'react-async';\n\n\nimport React, { useState, useEffect } from 'react';\nfunction App() {\n  return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p className = \"App-header-text\">\n            Know Your Courses\n          </p>\n          <ColoredLine color=\"black\" />\n        </header>\n      <Feature1 />\n      </div>\n  );\n}\nconst ProgressBar = (props) => {\n  const { bgcolor, completed } = props;\n\n  const containerStyles = {\n    marginTop:10,\n    height: 20,\n    width: '100%',\n    backgroundColor: \"white\",\n    borderRadius: 10,\n    margin: 2\n  }\n\n  const fillerStyles = {\n    height: '100%',\n    width: `${completed}%`,\n    transition: 'width 1s ease-in-out',\n    backgroundColor: bgcolor,\n    borderRadius: 'inherit',\n    textAlign: 'right'\n  }\n\n  const labelStyles = {\n    padding: 5,\n    color: 'white',\n    fontWeight: 'bold',\n    fontSize: 18,\n    color:'black',\n    fontFamily:'Avenir Next Ultra Light',\n    fontWeight: 400,\n  }\n\n  return (\n    <div style={containerStyles}>\n      <div style={fillerStyles}>\n        <span style={labelStyles}>{}</span>\n      </div>\n    </div>\n  );\n};\n\nfunction FunctionalitySetter(props) {\n  \n\n\n  const [completed, setCompleted] = useState(0);\n  const [prog1,setProg1] = useState(0);\n  const [prog2,setProg2] = useState(0);\n  const [prog3,setProg3] = useState(0);\n  const [prog4,setProg4] = useState(0);\n  const [prog5,setProg5] = useState(0);\n  const [prog6,setProg6] = useState(0);\n  const [prog7,setProg7] = useState(0);\n\n  const [id1,setId1] = useState(\"\")\n  const [id2,setId2] = useState(\"\")\n  const [id3,setId3] = useState(\"\")\n  const [id4,setId4] = useState(\"\")\n  const [id5,setId5] = useState(\"\")\n  const [id6,setId6] = useState(\"\")\n  const [id7,setId7] = useState(\"\")\n\n  const [courseNumber1,setCourseNumber1] = useState(\"\")\n  const [courseNumber2,setCourseNumber2] = useState(\"\")\n  const [courseNumber3,setCourseNumber3] = useState(\"\")\n  const [courseNumber4,setCourseNumber4] = useState(\"\")\n  const [courseNumber5,setCourseNumber5] = useState(\"\")\n  const [courseNumber6,setCourseNumber6] = useState(\"\")\n  const [courseNumber7,setCourseNumber7] = useState(\"\")\n  \n  const [prof1,setProf1] = useState(\"\")\n  const [prof2,setProf2] = useState(\"\")\n  const [prof3,setProf3] = useState(\"\")\n  const [prof4,setProf4] = useState(\"\")\n  const [prof5,setProf5] = useState(\"\")\n  const [prof6,setProf6] = useState(\"\")\n  const [prof7,setProf7] = useState(\"\")\n\n  const [text,setText] = useState(\"\")\n  const [category, setCategory] = useState(\"\")\n  const handleCategory = (e) => {\n    setCategory(e.target.value)\n  }\n  const MasterList = {\n    'ENG':[101,102,103],\n    'MATH':[101,102],\n    'CMPUT':[174,175],\n  }\n  const ProfessorList = {\n    'ENG101':['a','b'],\n    'ENG102':['c','d'],\n    'MATH101':['e','f'],\n    'MATH102':['g','h'],\n    'CMPUT174':['i','j'],\n    'CMPUT175':['k','l'],\n  }\n  const DifficultyList = {\n    'ENG101a':1,\n    'ENG101b':3,\n    'ENG102c':5,\n    'ENG102d':9,\n    'MATH101e':6,\n    'MATH101f':3,\n    'MATH102g':2,\n    'MATH102h':8,\n    'CMPUT174i':0,\n    'CMPUT174j':1,\n    'CMPUT175k':3,\n    'CMPUT175l':4,\n  }\n  var scores = []\n\n  if (props.Feature ==\"CourseLoad\"){  \n\n  const handleCourseNumber1 = (e) => {\n    setCourseNumber1(e.target.value)\n  }\n  const handleCourseName1 = (e) => {\n    setId1(e.target.value)\n  }\n\n  const handleProf1 = (e) => {\n    setProf1(e.target.value)\n  }\n  let handleRequest = async function(name,number,prof,no){\n    var first = prof.split(\" \")[0]\n    var second = prof.split(\" \")[1]\n    if (no==1){\n    if (courseNumber1.length>=1 && id1.length>=1){\n    const response = await fetch(`/rating?name=${first}+${second}&courseName=${name}&courseNumber=${number}`);\n    const json = await response.json();\n    setProg1(Math.round(json.rating * 100) / 100);}\n    else{\n      setProg1(0);\n    }\n    scores.push(50)\n    }\n    if(no==2){\n      if (courseNumber2.length>=1 && id2.length>=1){\n    const response = await fetch(`/rating?name=${first}+${second}&courseName=${name}&courseNumber=${number}`);\n    const json = await response.json();\n    setProg2(Math.round(json.rating * 100) / 100);}\n    else{\n      setProg2(0);\n    }\n    scores.push(prog2)\n    }\n    if(no==3){\n    if (courseNumber3.length>=1 && id3.length>=1){\n    const response = await fetch(`/rating?name=${first}+${second}&courseName=${name}&courseNumber=${number}`);\n    const json = await response.json();\n    setProg3(Math.round(json.rating * 100) / 100);}\n    else{\n      setProg3(0);\n    }\n    scores.push(prog3)\n    }\n    if(no==4){\n    if (courseNumber4.length>=1 && id4.length>=1){\n    const response = await fetch(`/rating?name=${first}+${second}&courseName=${name}&courseNumber=${number}`);\n    const json = await response.json();\n    setProg4(Math.round(json.rating * 100) / 100);\n    }\n    else{\n      setProg4(0);\n    }\n    scores.push(prog4)\n    }\n    if(no==5){\n    if (courseNumber5.length>=1 && id5.length>=1){\n    const response = await fetch(`/rating?name=${first}+${second}&courseName=${name}&courseNumber=${number}`);\n    const json = await response.json();\n    setProg5(Math.round(json.rating * 100) / 100);}\n    else{\n      setProg5(0);\n    }\n    scores.push(prog5)\n    }\n    if(no==6){\n    if (courseNumber6.length>=1 && id6.length>=1){\n    const response = await fetch(`/rating?name=${first}+${second}&courseName=${name}&courseNumber=${number}`);\n    const json = await response.json();\n    if(json.rating == -1){\n      setProg6(0)\n    }\n    else{\n    setProg6(Math.round(json.rating * 100) / 100);}\n    }\n    scores.push(prog6)\n    }\n    if(no==7){\n    if (courseNumber7.length>=1 && id7.length>=1){\n    const response = await fetch(`/rating?name=${first}+${second}&courseName=${name}&courseNumber=${number}`);\n    const json = await response.json();\n    if(json.rating == -1){\n      setProg7(0)\n    }\n    else{\n    setProg7(Math.round(json.rating * 100) / 100);}\n    }\n    scores.push(prog7)\n    }\n    \n  }\n  const handleCourseNumber2 = (e) => {\n    setCourseNumber2(e.target.value)\n  }\n  const handleCourseName2 = (e) => {\n    setId2(e.target.value)\n  }\n  const handleProf2 = (e) => {\n    setProf2(e.target.value)\n  }\n\n  const handleCourseNumber3 = (e) => {\n    setCourseNumber3(e.target.value)\n  }\n  const handleCourseName3 = (e) => {\n    setId3(e.target.value)\n  }\n  const handleProf3 = (e) => {\n    setProf3(e.target.value)\n  }\n\n  const handleCourseNumber4 = (e) => {\n    setCourseNumber4(e.target.value)\n  }\n  const handleCourseName4 = (e) => {\n    setId4(e.target.value)\n  }\n  const handleProf4 = (e) => {\n    setProf4(e.target.value)\n  }\n\n  const handleCourseNumber5 = (e) => {\n    setCourseNumber5(e.target.value)\n  }\n  const handleCourseName5 = (e) => {\n    setId5(e.target.value)\n  }\n  const handleProf5 = (e) => {\n    setProf5(e.target.value)\n  }\n\n  const handleCourseNumber6 = (e) => {\n    setCourseNumber6(e.target.value)\n  }\n  const handleCourseName6 = (e) => {\n    setId6(e.target.value)\n  }\n  const handleProf6 = (e) => {\n    setProf6(e.target.value)\n  }\n\n  const handleCourseNumber7 = (e) => {\n    setCourseNumber7(e.target.value)\n  }\n  const handleCourseName7 = (e) => {\n    setId7(e.target.value)\n  }\n  const handleProf7 = (e) => {\n    setProf7(e.target.value)\n  }\n  const handleCompleted = () => {\n    if(completed==90){\n      return \"Not Manageable\"\n    }\n    if (completed==30){\n      return \"Light Course load\"\n    }\n    if (completed == 50){\n      return \"Manageable Course Load\"\n    }\n    if (completed == 10){\n      return \"Easy, have fun\"\n    }\n    if (completed == 70){\n      return \"Likely to be difficult\"\n    }\n  }\n\n  const calcTotal = () => {\n    scores.push(prog1)\n    scores.push(prog2)\n    scores.push(prog3)\n    scores.push(prog4)\n    scores.push(prog5)\n    scores.push(prog6)\n    scores.push(prog7)\n    let answer = 0;\n    for(let i =0; i<scores.length; i++){\n      answer+=scores[i]\n    }\n    console.log(answer);\n    if(answer >160 && answer<=200){\n      setCompleted(50)\n    }\n    else if (answer >= 250){\n      setCompleted(90)\n    }\n    else if (answer >= 130 && answer <=160){\n        setCompleted(30)\n    }\n    else if (answer < 150){\n      setCompleted(10)\n    }\n    else if(answer>200&&answer<250){\n      setCompleted(70)\n    }\n    else{\n      setCompleted(50)\n    }\n    console.log(scores)\n  }\n\n  let courses = []\n  const color = ['#b8ff04','#9aff02','#6fd40b','#b5d611','#d2d911',\n  '#d6cf0f','#d9b813','#dba50f','#e89042','#eb4b1f']\n  Object.entries(MasterList).forEach(([key, value]) => courses.push(key));\n  return(\n    <div>\n    <div style={{display:'flex',justifyContent:'flex-start',flexDirection:'column'}}>\n    <p className = \"ButtonText\"> \n        Enter your course name, corresponding course number and instructor!\n    </p>\n    \n    <p className = \"ButtonText\"> \n        Watch the difficulty meters grow/shrink based on your schedule! \n    </p>\n    </div>\n    <hr\n        style={{\n            color: \"black\",\n            backgroundColor: \"black\",\n            height: 0.5,\n            width:\"60vh\",\n            marginLeft:\"35%\"\n        }}\n    />\n    <div className = \"MainContainer\">\n\n    <div className = \"VerticalContainer\">\n    <div className = \"CourseLoadFormContainer\">\n    <p className = \"ButtonText\">\n      1.\n    </p>\n      <Input focus placeholder='Course Name...ECE' onChange={handleCourseName1}/>\n      <Input focus placeholder='Course Number...325' onChange={handleCourseNumber1}/>\n      <Input focus placeholder='Instructor: Antal Molina' onChange={handleProf1}/>\n      <button className = \"FeatureButton\" onClick = {()=>handleRequest(id1,courseNumber1,prof1,1)}>\n      <p className = \"ButtonText\">\n      Go!\n      </p>\n      </button>\n    </div>\n\n    <div className = \"CourseLoadFormContainer\">\n      <p className = \"ButtonText\">\n      2.\n      </p>\n       <Input focus placeholder='Course Name...ECE' onChange={handleCourseName2}/>\n      <Input focus placeholder='Course Number...325' onChange={handleCourseNumber2}/>\n      <Input focus placeholder='Instructor: Antal Molina' onChange={handleProf2}/>\n      <button className = \"FeatureButton\" onClick = {()=>handleRequest(id2,courseNumber2,prof2,2)}>\n      <p className = \"ButtonText\">\n      Go!\n      </p>\n      </button>\n    </div>\n\n    <div className = \"CourseLoadFormContainer\">\n      <p className = \"ButtonText\">\n      3.\n      </p>\n       <Input focus placeholder='Course Name...' onChange={handleCourseName3}/>\n      <Input focus placeholder='Course Number...' onChange={handleCourseNumber3}/>\n      <Input focus placeholder='Instructor...' onChange={handleProf3}/>\n      <button className = \"FeatureButton\" onClick = {()=>handleRequest(id3,courseNumber3,prof3,3)}>\n      <p className = \"ButtonText\">\n      Go!\n      </p>\n       </button>\n    </div>\n\n    <div className = \"CourseLoadFormContainer\">\n      <p className = \"ButtonText\">\n      4.\n      </p>\n       <Input focus placeholder='Course Name...' onChange={handleCourseName4}/>\n      <Input focus placeholder='Course Number...' onChange={handleCourseNumber4}/>\n      <Input focus placeholder='Instructor Name...' onChange={handleProf4}/>\n      <button className = \"FeatureButton\" onClick = {()=>handleRequest(id4,courseNumber4,prof4,4)}>\n      <p className = \"ButtonText\">\n      Go!\n      </p>\n       </button>\n      <button onClick = {calcTotal} className= \"FeatureButton\">\n        <p className = \"ButtonText\">\n                Calculate total\n        </p> \n      </button>\n    </div>\n\n    <div className = \"CourseLoadFormContainer\">\n      <p className = \"ButtonText\">\n      5.\n      </p>\n       <Input focus placeholder='Course Name...' onChange={handleCourseName5}/>\n      <Input focus placeholder='Course Number...' onChange={handleCourseNumber5}/>\n      <Input focus placeholder='Instructor Name...' onChange={handleProf5}/>\n      <button className = \"FeatureButton\" onClick = {()=>handleRequest(id5,courseNumber5,prof5,5)}>\n      <p className = \"ButtonText\">\n      Go!\n      </p>\n       </button>\n    </div>\n\n    <div className = \"CourseLoadFormContainer\">\n      <p className = \"ButtonText\">\n      6.\n      </p>\n       <Input focus placeholder='Course Name...' onChange={handleCourseName6}/>\n      <Input focus placeholder='Course Number...' onChange={handleCourseNumber6}/>\n      <Input focus placeholder='Instructor Name...' onChange={handleProf6}/>\n      <button className = \"FeatureButton\" onClick = {()=>handleRequest(id6,courseNumber6,prof6,6)}>\n      <p className = \"ButtonText\">\n      Go!\n      </p>\n       </button>\n    </div>\n\n\n    <div className = \"CourseLoadFormContainer\">\n      <p className = \"ButtonText\">\n      7.\n      </p>\n       <Input focus placeholder='Course Name...' onChange={handleCourseName7}/>\n      <Input focus placeholder='Course Number...' onChange={handleCourseNumber7}/>\n      <Input focus placeholder='Instructor Name...' onChange={handleProf7}/>\n      <button className = \"FeatureButton\" onClick = {()=>handleRequest(id7,courseNumber7,prof7,7)}>\n      <p className = \"ButtonText\">\n      Go!\n      </p>\n       </button>\n    </div>\n    </div>\n\n    <div className = \"DifficultyMeter\">\n    <p className = \"ButtonText\" style={{marginLeft:\"80px\"}}>\n        Difficulty Meter\n    </p>  \n\n     <OverlayTrigger\n      key={'top'}\n      placement={'top'}\n      overlay={\n        <Tooltip id={`tooltip-${'top'}`}>\n          Individual difficulty includes our own algorithm to classify\n          reviews, ratings, and other factors for every course.\n          Method: Extensive data collection from the web and then using NLP, \n          and Deep Learning to get predictions. \n        </Tooltip>\n      }\n    >\n      <Button variant=\"secondary\">Individual Difficulty. Hover over me to find out more!</Button>\n    </OverlayTrigger>\n    <ProgressBar bgcolor={color[Math.floor(prog1/10)]} completed={prog1} /> \n    <ProgressBar bgcolor={color[Math.floor(prog2/10)]} completed={prog2} />\n    <ProgressBar bgcolor={color[Math.floor(prog3/10)]} completed={prog3} />\n    <ProgressBar bgcolor={color[Math.floor(prog4/10)]} completed={prog4} />\n    <ProgressBar bgcolor={color[Math.floor(prog5/10)]} completed={prog5} />\n    <ProgressBar bgcolor={color[Math.floor(prog6/10)]} completed={prog6} />\n    <ProgressBar bgcolor={color[Math.floor(prog7/10)]} completed={prog7} />\n    <OverlayTrigger\n      key={'top'}\n      placement={'top'}\n      overlay={\n        <Tooltip id={`tooltip-${'top'}`}>\n         A measure of how difficult it will be to manage this combination of courses.\n        </Tooltip>\n      }\n    >\n      <Button variant=\"secondary\">Total Difficulty. Hover over me to find out more!</Button>\n    </OverlayTrigger>\n    <p className = \"ButtonText\">\n    {handleCompleted()}\n    </p>\n    <ProgressBar bgcolor={color[Math.floor(completed/10)]} completed={completed} />\n    </div> \n    </div>\n    </div>\n  );\n  }\n  else{\n    return(\n      <div>\n      <div style={{display:'flex',justifyContent:'flex-start',flexDirection:'column'}}>\n        <p className = \"ButtonText\"> \n            Enter the desired subject and choose the difficulty.\n        </p>\n        \n        <p className = \"ButtonText\"> \n            The following recommended courses are a guideline, feel free to change difficulty.\n        </p>\n        <hr\n        style={{\n            color: \"black\",\n            backgroundColor: \"black\",\n            height: 0.5,\n            width:\"60vh\",\n            marginLeft:\"35%\"\n        }}\n        /> \n        <div className = \"CourseLoadFormContainer\">\n      <Input focus placeholder='Category...' onChange={handleCategory}/>\n      </div>\n    </div>\n    </div>\n  );\n  }\n}\n\n\n\n\nfunction Feature1() {\n  const [ex, setEx] = useState(\"\")\n  return(\n    <div>\n      <div className = \"FeatureContainer\">\n        <button onClick = {()=>setEx(\"CourseLoad\") } className = \"FeatureButton\"> \n          <p className = \"ButtonText\">\n              Course Load\n          </p>\n        </button>\n        <button onClick = {()=>setEx(\"DoesntMatter\")} className=\"FeatureButton\"> \n        <p className = \"ButtonText\">\n            Recommendations\n          </p>\n        </button>\n      </div>\n          <hr\n        style={{\n            color: \"black\",\n            backgroundColor: \"black\",\n            height: 0.5,\n            width:\"60vh\",\n            marginLeft:\"35%\"\n        }}\n    />\n      <div className = \"SelectedFeature\">\n        <FunctionalitySetter Feature = {ex}/>\n      </div>\n    </div>\n  )\n}\n\nconst ColoredLine = ({ color }) => (\n    <hr\n        style={{\n            color: color,\n            backgroundColor: color,\n            height: 0.5,\n            width:window.innerWidth\n        }}\n    />\n);\nexport default App;\n","/Users/sutanshuseth/Desktop/KnowYourCourses/kyc/src/reportWebVitals.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":8,"nodeType":"51","messageId":"52","endLine":1,"endColumn":12},{"ruleId":"49","severity":1,"message":"53","line":3,"column":8,"nodeType":"51","messageId":"52","endLine":3,"endColumn":22},{"ruleId":"49","severity":1,"message":"54","line":4,"column":8,"nodeType":"51","messageId":"52","endLine":4,"endColumn":16},{"ruleId":"49","severity":1,"message":"55","line":11,"column":8,"nodeType":"51","messageId":"52","endLine":11,"endColumn":13},{"ruleId":"49","severity":1,"message":"56","line":14,"column":27,"nodeType":"51","messageId":"52","endLine":14,"endColumn":36},{"ruleId":"57","severity":1,"message":"58","line":54,"column":5,"nodeType":"59","messageId":"60","endLine":54,"endColumn":10},{"ruleId":"57","severity":1,"message":"61","line":56,"column":5,"nodeType":"59","messageId":"60","endLine":56,"endColumn":15},{"ruleId":"49","severity":1,"message":"62","line":105,"column":10,"nodeType":"51","messageId":"52","endLine":105,"endColumn":14},{"ruleId":"49","severity":1,"message":"63","line":105,"column":15,"nodeType":"51","messageId":"52","endLine":105,"endColumn":22},{"ruleId":"49","severity":1,"message":"64","line":106,"column":10,"nodeType":"51","messageId":"52","endLine":106,"endColumn":18},{"ruleId":"49","severity":1,"message":"65","line":115,"column":9,"nodeType":"51","messageId":"52","endLine":115,"endColumn":22},{"ruleId":"49","severity":1,"message":"66","line":123,"column":9,"nodeType":"51","messageId":"52","endLine":123,"endColumn":23},{"ruleId":"67","severity":1,"message":"68","line":139,"column":21,"nodeType":"69","messageId":"60","endLine":139,"endColumn":23},{"ruleId":"67","severity":1,"message":"68","line":154,"column":11,"nodeType":"69","messageId":"60","endLine":154,"endColumn":13},{"ruleId":"67","severity":1,"message":"68","line":164,"column":10,"nodeType":"69","messageId":"60","endLine":164,"endColumn":12},{"ruleId":"67","severity":1,"message":"68","line":174,"column":10,"nodeType":"69","messageId":"60","endLine":174,"endColumn":12},{"ruleId":"67","severity":1,"message":"68","line":184,"column":10,"nodeType":"69","messageId":"60","endLine":184,"endColumn":12},{"ruleId":"67","severity":1,"message":"68","line":195,"column":10,"nodeType":"69","messageId":"60","endLine":195,"endColumn":12},{"ruleId":"67","severity":1,"message":"68","line":205,"column":10,"nodeType":"69","messageId":"60","endLine":205,"endColumn":12},{"ruleId":"67","severity":1,"message":"68","line":209,"column":20,"nodeType":"69","messageId":"60","endLine":209,"endColumn":22},{"ruleId":"67","severity":1,"message":"68","line":217,"column":10,"nodeType":"69","messageId":"60","endLine":217,"endColumn":12},{"ruleId":"67","severity":1,"message":"68","line":221,"column":20,"nodeType":"69","messageId":"60","endLine":221,"endColumn":22},{"ruleId":"67","severity":1,"message":"68","line":291,"column":17,"nodeType":"69","messageId":"60","endLine":291,"endColumn":19},{"ruleId":"67","severity":1,"message":"68","line":294,"column":18,"nodeType":"69","messageId":"60","endLine":294,"endColumn":20},{"ruleId":"67","severity":1,"message":"68","line":297,"column":19,"nodeType":"69","messageId":"60","endLine":297,"endColumn":21},{"ruleId":"67","severity":1,"message":"68","line":300,"column":19,"nodeType":"69","messageId":"60","endLine":300,"endColumn":21},{"ruleId":"67","severity":1,"message":"68","line":303,"column":19,"nodeType":"69","messageId":"60","endLine":303,"endColumn":21},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'DropdownButton' is defined but never used.","'Dropdown' is defined but never used.","'Async' is defined but never used.","'useEffect' is defined but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","Duplicate key 'fontWeight'.","'text' is assigned a value but never used.","'setText' is assigned a value but never used.","'category' is assigned a value but never used.","'ProfessorList' is assigned a value but never used.","'DifficultyList' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","no-global-assign","no-unsafe-negation"]